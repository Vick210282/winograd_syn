// WC.v generated by WCSyn.py
`timescale 1ns / 1ps
module WC(D, clk, rst, Z);
input  [10*4-1:0] D;
input  clk, rst;
output reg [10*2-1:0] Z;

	reg [9:0] input_t [0:3];
	reg [9:0] d [0:15];
	reg [9:0] MUL [0:3];
	reg [9:0] output_t [0:1];

	always@(posedge clk)begin

		//input_transform
		d[15] <= (D[9:0]);
		d[14] <= 0;
		d[13] <= (~D[29:20] + 1);
		d[12] <= 0;
		d[11] <= 0;
		d[10] <= (D[19:10]);
		d[9] <= (~D[29:20] + 1);
		d[8] <= 0;
		d[7] <= 0;
		d[6] <= (D[19:10]);
		d[5] <= (D[29:20]);
		d[4] <= 0;
		d[3] <= 0;
		d[2] <= (~D[19:10] + 1);
		d[1] <= 0;
		d[0] <= (D[39:30]);

		input_t[0] <= (d[0]) + 0 +  (d[2]) + 0;
		input_t[1] <=0 +  (d[5]) +  (d[6]) + 0;
		input_t[2] <=0 +  (d[9]) +  (d[10]) + 0;
		input_t[3] <=0 +  (d[13]) + 0 +  (d[15]);

		//G*g
		MUL[0] <= (input_t[0]) <<< 2;
		MUL[1] <= (input_t[1])*9;
		MUL[2] <= (input_t[2]) <<< 3;
		MUL[3] <= (input_t[3])*13;

		output_t[0] <= (MUL[0]) + (MUL[1]) + (MUL[2]) + 0;
		output_t[1] <=  0 + (MUL[1]) - (MUL[2]) +  (MUL[3]);

		Z[19:10] <= output_t[0];
		Z[9:0] <= output_t[1];

	end
endmodule
